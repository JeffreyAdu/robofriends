{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","index.js"],"names":["Card","_ref","name","email","id","React","createElement","className","alt","src","concat","CardList","robots","map","user","i","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","App","Component","constructor","super","onSearchChange","event","this","setState","target","value","state","componentDidMount","fetch","then","response","json","users","render","filteredRobots","filter","robot","toLowerCase","includes","length","createRoot","document","getElementById"],"mappings":"6LAceA,MAZFC,IAA0B,IAAzB,KAAEC,EAAI,MAAEC,EAAK,GAAEC,GAAIH,EAC/B,OACEI,IAAAC,cAAA,OAAKC,UAAU,uDACbF,IAAAC,cAAA,OAAKE,IAAI,SAASC,IAAG,wBAAAC,OAA0BN,EAAE,mBACjDC,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAKJ,GACLG,IAAAC,cAAA,SAAIH,MCcGQ,MAnBEV,IAAiB,IAAhB,OAAEW,GAAQX,EAC1B,OACEI,IAAAC,cAAA,WAEIM,EAAOC,IAAI,CAACC,EAAMC,IAEdV,IAAAC,cAACN,EAAI,CACHgB,IAAKD,EACLX,GAAIQ,EAAOG,GAAGX,GACdF,KAAMU,EAAOG,GAAGb,KAChBC,MAAOS,EAAOG,GAAGZ,WCEhBc,MAbGhB,IAAoC,IAAnC,YAAEiB,EAAW,aAAEC,GAAclB,EAC9C,OACEI,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,SACEC,UAAU,mCACVa,KAAK,SACLC,YAAY,gBACZC,SAAUH,MCCHI,MARCC,GAEZnB,IAAAC,cAAA,OAAKmB,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,UAClEJ,EAAMK,U,MCEb,MAAMC,UAAYC,YAChBC,cACEC,QAAO,KAaTC,eAAkBC,IAChBC,KAAKC,SAAS,CAAEnB,YAAaiB,EAAMG,OAAOC,SAb1CH,KAAKI,MAAQ,CACX5B,OAAQ,GACRM,YAAa,IAIjBuB,oBACEC,MAAM,8CACHC,KAAKC,GAAWA,EAASC,QACzBF,KAAKG,IAAUV,KAAKC,SAAS,CAAEzB,OAAQkC,MAO5CC,SACE,MAAM,OAAEnC,EAAM,YAAEM,GAAgBkB,KAAKI,MAC/BQ,EAAiBpC,EAAOqC,OAAOC,GAC5BA,EAAMhD,KAAKiD,cAAcC,SAASlC,EAAYiC,gBAEvD,OAAQvC,EAAOyC,OAGXhD,IAAAC,cAAA,OAAKC,UAAU,MACbF,IAAAC,cAAA,MAAIC,UAAU,MAAK,eACnBF,IAAAC,cAACW,EAAS,CAACE,aAAciB,KAAKF,iBAC9B7B,IAAAC,cAACiB,EAAM,KACLlB,IAAAC,cAACK,EAAQ,CAACC,OAAQoC,MANxB3C,IAAAC,cAAA,UAAI,YAaKwB,Q,MCnCFwB,qBAAWC,SAASC,eAAe,SAC3CT,OAAO1C,IAAAC,cAACwB,EAAG,Q","file":"static/js/main.e95c85f0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n  return (\r\n    <div className='tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5'>\r\n      <img alt='robots' src={`https://robohash.org/${id}?size=200x200`} />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n  return (\r\n    <div>\r\n      {\r\n        robots.map((user, i) => {\r\n          return (\r\n            <Card\r\n              key={i}\r\n              id={robots[i].id}\r\n              name={robots[i].name}\r\n              email={robots[i].email}\r\n              />\r\n          );\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n  return (\r\n    <div className='pa2'>\r\n      <input\r\n        className='pa3 ba b--green bg-lightest-blue'\r\n        type='search'\r\n        placeholder='search robots'\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={{ overflow: 'scroll', border: '5px solid black', height: '800px'}}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;\r\n","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      robots: [],\r\n      searchfield: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then(response=> response.json())\r\n      .then(users => {this.setState({ robots: users})});\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchfield: event.target.value })\r\n  }\r\n\r\n  render() {\r\n    const { robots, searchfield } = this.state;\r\n    const filteredRobots = robots.filter(robot =>{\r\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n    })\r\n    return !robots.length ?\r\n      <h1>Loading</h1> :\r\n      (\r\n        <div className='tc'>\r\n          <h1 className='f1'>RoboFriends</h1>\r\n          <SearchBox searchChange={this.onSearchChange}/>\r\n          <Scroll>\r\n            <CardList robots={filteredRobots} />\r\n          </Scroll>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\n// import ReactDOM from 'react-dom'; The new way to import createRoot:\r\nimport { createRoot } from \"react-dom/client\";\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport 'tachyons';\r\n// import registerServiceWorker from './registerServiceWorker';\r\n\r\n\r\n\r\nconst root = createRoot(document.getElementById('root'));\r\nroot.render(<App />);\r\n\r\n\r\n// ReactDOM.render(<App />, document.getElementById('root'));\r\n// registerServiceWorker();\r\n"],"sourceRoot":""}